@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #1a1a1a;
  --secondary: #2e7d32;
  --accent: #4caf50;
  --background: #ffffff;
  --foreground: #1a1a1a;
  --gray-light: #f5f5f5;
  --gray: #e0e0e0;
}

@media (prefers-color-scheme: dark) {
  :root {
    --primary: #2e7d32;
    --secondary: #1a1a1a;
    --accent: #4caf50;
    --background: #121212;
    --foreground: #ffffff;
    --gray-light: #1a1a1a;
    --gray: #2a2a2a;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-rajdhani), sans-serif;
  overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-rajdhani), sans-serif;
  font-weight: 600;
}

@layer components {
  .container {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }
  
  .btn-primary {
    @apply bg-hivemind-green text-white py-3 px-6 rounded-md font-medium hover:bg-hivemind-green-dark transition-colors;
  }
  
  .btn-secondary {
    @apply bg-hivemind-black text-white py-3 px-6 rounded-md font-medium hover:opacity-90 transition-opacity;
  }
  
  .btn-outline {
    @apply border-2 border-hivemind-green text-hivemind-green py-3 px-6 rounded-md font-medium hover:bg-hivemind-green hover:text-white transition-colors;
  }
  
  .section {
    @apply py-16 md:py-24 relative;
    position: relative;
    z-index: 1;
  }
  
  /* Ensure About section is always on top */
  #about {
    position: relative;
    z-index: 20;
  }
  
  .section-title {
    @apply text-3xl md:text-4xl font-bold mb-6 text-center;
    position: relative;
    z-index: 5;
  }
  
  .section-subtitle {
    @apply text-lg md:text-xl text-center max-w-3xl mx-auto mb-12 text-gray-600 dark:text-gray-300;
    position: relative;
    z-index: 5;
  }
  
  /* Ensure text animations are always visible */
  .split-char, .split-word {
    position: relative;
    z-index: 10;
  }
  
  /* Scroll down animation */
  @keyframes scroll-down {
    0% {
      opacity: 1;
      transform: translateY(0);
    }
    50% {
      opacity: 0.5;
      transform: translateY(8px);
    }
    100% {
      opacity: 0;
      transform: translateY(16px);
    }
  }
  
  .animate-scroll-down {
    animation: scroll-down 1.5s infinite;
  }
  
  /* Smooth scrolling for desktop */
  html:not(.is-mobile) {
    scroll-behavior: smooth;
  }
  
  /* Styles for horizontal scroll sections */
  .horizontal-scroll {
    overflow: hidden;
    position: relative;
  }
  
  .horizontal-container > * {
    flex-shrink: 0;
  }
}

/* Disable smooth scrolling for mobile devices */
.is-mobile .viewport {
  position: relative !important;
}

.is-mobile .scroll-container {
  transform: none !important;
}

/* Logo Scrolling Animation */
.logo-scroll-container {
  width: 100%;
  overflow: hidden;
  position: relative;
  padding: 2rem 0;
}

.logo-scroll {
  position: relative;
  overflow: hidden;
  user-select: none;
  display: flex;
  gap: 2rem;
}

.logo-scroll-content {
  display: flex;
  padding: 0;
  margin: 0;
  flex-shrink: 0;
  justify-content: space-around;
  min-width: 100%;
  list-style: none;
  gap: 2rem;
  animation: scroll 25s linear infinite;
}

.logo-scroll-reverse .logo-scroll-content {
  animation-direction: reverse;
}

.logo-scroll-content li {
  padding: 0;
  margin: 0;
}

.logo-item {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 150px;
  height: 80px;
  filter: grayscale(100%);
  opacity: 0.6;
  transition: all 0.3s ease;
}

.logo-item:hover {
  filter: grayscale(0%);
  opacity: 1;
  transform: scale(1.05);
}

.logo-item img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-100% - 2rem));
  }
}

@media (prefers-reduced-motion: reduce) {
  .logo-scroll-content {
    animation-play-state: paused !important;
  }
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .logo-item {
    width: 120px;
    height: 60px;
  }
  
  .logo-scroll-content {
    gap: 1.5rem;
  }
  
  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-100% - 1.5rem));
    }
  }
}
